// Gi·ªØ nguy√™n ph·∫ßn import nh∆∞ b·∫°n ƒë√£ c√≥
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import TopMenu from "./TopMenu";
import qrImage from "/images/qr-demo.png";
import vnpayLogo from "/images/vnpay.png";
import bidv from "/images/bidv.png";
import mb from "/images/mb.png";
import vietcombank from "/images/vietcombank.png";
import vietinbank from "/images/vietinbank.png";

const plans = [
  {
    name: "Mi·ªÖn ph√≠",
    price: "0 VNƒê",
    amount: 0,
    description:
      "Mi·ªÖn ph√≠ d√†nh cho c√°c c√° nh√¢n mu·ªën t·∫£i l√™n CV v√† nh·∫≠n ƒë∆∞·ª£c danh s√°ch k·ªπ nƒÉng hi·ªán t·∫°i.",
    button: "‚ûú Ti·∫øp t·ª•c",
  },
  {
    name: "G√≥i n√¢ng cao",
    price: "100.000 VNƒê / 1 th√°ng",
    amount: 100000,
    description:
      "D√†nh cho c√°c c√° nh√¢n mu·ªën ph√¢n t√≠ch ƒë·∫ßy ƒë·ªß k·ªπ nƒÉng t·ª´ m√¥ t·∫£ c√¥ng vi·ªác c·ª• th·ªÉ.",
    button: "‚ûú ƒêƒÉng k√Ω",
  },
  {
    name: "G√≥i to√†n di·ªán",
    price: "200.000 VNƒê / 1 th√°ng",
    amount: 200000,
    description:
      "Bao g·ªìm m·ªçi t√≠nh nƒÉng c·ªßa g√≥i ph·ªï th√¥ng, theo d√µi ti·∫øn ƒë·ªô h·ªçc v√† c√°c t√≠nh nƒÉng cao c·∫•p.",
    button: "‚ûú ƒêƒÉng k√Ω",
  },
];

const featureGroups = [
  {
    title: "üìÅ T·∫£i l√™n CV & m√¥ t·∫£ c√¥ng vi·ªác",
    items: [
      { feature: "T·∫£i l√™n CV c·ªßa b·∫°n", values: [true, true, true] },
      { feature: "T·∫£i l√™n m√¥ t·∫£ c√¥ng vi·ªác", values: [true, true, true] },
      { feature: "Nh·∫≠p link m√¥ t·∫£ c√¥ng vi·ªác t·ª´ TOPCV", values: [true, true, true] },
    ],
  },
  {
    title: "üíº C√¥ng vi·ªác ph√π h·ª£p",
    items: [
      { feature: "Danh s√°ch c√¥ng vi·ªác ph√π h·ª£p", values: [false, true, true] },
      { feature: "ƒê·ªô ph√π h·ª£p CV v√† v·ªã tr√≠ c√¥ng vi·ªác", values: [false, true, true] },
    ],
  },
  {
    title: "üß† Ph√¢n t√≠ch k·ªπ nƒÉng & Kh√≥a h·ªçc",
    items: [
      { feature: "K·ªπ nƒÉng hi·ªán t·∫°i c·ªßa b·∫°n", values: [false, false, true] },
      { feature: "K·ªπ nƒÉng c√≤n thi·∫øu", values: [false, false, true] },
      { feature: "K·ªπ nƒÉng y√™u c·∫ßu c·ªßa t·ª´ng m√¥ t·∫£ c√¥ng vi·ªác", values: [false, false, true] },
      { feature: "ƒê·ªô ph√π h·ª£p gi·ªØa k·ªπ nƒÉng hi·ªán t·∫°i v√† y√™u c·∫ßu", values: [false, false, true] },
      { feature: "Nh·∫≠n ƒë·ªãnh chung k·ªπ nƒÉng c·ªßa b·∫°n v√† m√¥ t·∫£", values: [false, false, true] },
      { feature: "Danh s√°ch kh√≥a h·ªçc g·ª£i √Ω", values: [false, false, true] },
      { feature: "Th√™m kh√≥a h·ªçc y√™u th√≠ch", values: [false, false, true] },
      { feature: "Theo d√µi c·∫≠p nh·∫≠t ti·∫øn ƒë·ªô kh√≥a h·ªçc", values: [false, false, true] },
    ],
  },
];

const ServicePayment = () => {
  const navigate = useNavigate();
  const [selectedPlan, setSelectedPlan] = useState(null);
  const [paymentMethod, setPaymentMethod] = useState("");

  const handleSelectPlan = (plan) => {
    if (plan.amount === 0) {
      navigate("/cv-upload-options");
    } else {
      setSelectedPlan(plan);
      setPaymentMethod("");
    }
  };
  

  const renderPaymentPopup = () => {
  if (!selectedPlan) return null;

  const handleConfirmTransfer = () => {
    alert("C·∫£m ∆°n b·∫°n! H·ªá th·ªëng s·∫Ω x√°c nh·∫≠n thanh to√°n trong gi√¢y l√°t.");
    setSelectedPlan(null);
    setPaymentMethod("");
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50">
      <div className="bg-white p-6 rounded-xl shadow-xl w-[400px] border border-gray-300 relative">
        <h3 className="text-red-600 font-semibold text-base mb-4">
          Thanh to√°n ‚Äì {selectedPlan.name}
        </h3>

        <p className="font-medium text-sm mb-2">Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n</p>

        {/* Radio: QR */}
        <label className="flex items-center gap-2 mb-3 text-sm cursor-pointer">
          <input
            type="radio"
            name="method"
            value="qr"
            checked={paymentMethod === "qr"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />
          <span className="text-blue-600 font-medium">Thanh to√°n qua QR code</span>
        </label>

        {/* Radio: VNPay */}
        <label className="flex items-center gap-2 mb-4 text-sm cursor-pointer">
          <input
            type="radio"
            name="method"
            value="vnpay"
            checked={paymentMethod === "vnpay"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />
          <span className="text-gray-800 font-medium">Thanh to√°n qua VNPay</span>
          <img src={vnpayLogo} alt="vnpay" className="h-5" />
        </label>

        {/* QR thanh to√°n */}
        {paymentMethod === "qr" && (
          <>
            <div className="flex items-center justify-center relative mb-2">
              <img src={qrImage} alt="QR" className="w-40 h-40 rounded" />
            </div>

            <p className="text-center text-red-600 text-sm font-semibold">
              M·ª©c ph√≠: {selectedPlan.amount.toLocaleString()} VNƒê
            </p>
            <p className="text-xs text-gray-500 text-center mt-1">
              (Kh√°ch h√†ng vui l√≤ng kh√¥ng thay ƒë·ªïi n·ªôi dung chuy·ªÉn kho·∫£n)
            </p>

            <div className="mt-4 text-center">
              <button
                onClick={handleConfirmTransfer}
                className="bg-green-600 hover:bg-green-700 text-white text-sm px-4 py-2 rounded-md"
              >
                ‚úÖ T√¥i ƒë√£ chuy·ªÉn kho·∫£n
              </button>
            </div>
          </>
        )}

        {/* VNPay redirect */}
        {paymentMethod === "vnpay" && (
          <div className="mt-4 border rounded bg-white p-3 text-sm text-center">
            <p className="text-gray-700 mb-2">
              B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn h∆∞·ªõng t·ªõi c·ªïng thanh to√°n VNPay.
            </p>
            <button
              className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm"
              onClick={() => {
                window.location.href =
                  "https://sandbox.vnpayment.vn/paymentv2/vpcpay.html";
              }}
            >
              Ti·∫øp t·ª•c thanh to√°n
            </button>
          </div>
        )}

        {/* N√∫t ƒë√≥ng */}
        <button
          onClick={() => {
            setSelectedPlan(null);
            setPaymentMethod("");
          }}
          className="absolute top-2 right-3 text-gray-400 hover:text-black text-lg"
        >
          &#10005;
        </button>
      </div>
    </div>
  );
};


  const renderFeatureGroup = (title, featureList) => (
    <div className="space-y-2">
      <h3 className="text-md font-semibold text-gray-700">{title}</h3>
      <div className="border border-blue-400 rounded-xl overflow-hidden text-sm">
        <table className="w-full border-collapse">
          <thead className="bg-blue-50 text-gray-800 font-semibold text-center">
            <tr>
              <th className="border px-4 py-3 text-left w-[50%]">T√≠nh nƒÉng</th>
              <th className="border px-4 py-3">Mi·ªÖn ph√≠</th>
              <th className="border px-4 py-3">G√≥i n√¢ng cao</th>
              <th className="border px-4 py-3">G√≥i to√†n di·ªán</th>
            </tr>
          </thead>
          <tbody>
            {featureList.map((item, idx) => (
              <tr key={idx} className="text-center align-top">
                <td className="border px-4 py-3 text-left text-gray-800">{item.feature}</td>
                {item.values.map((value, i) => (
                  <td key={i} className="border px-4 py-3">{value ? "‚úî" : "‚úñ"}</td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );

  return (
    <>
      <div className="max-w-7xl mx-auto">
        <TopMenu />
      </div>
      <div className="bg-white min-h-screen p-6 max-w-6xl mx-auto space-y-8">
        <h2 className="text-xl font-semibold text-gray-800">Thanh to√°n ‚Äì ƒêƒÉng k√Ω g√≥i d·ªãch v·ª•</h2>

        {/* Plans */}
        <div className="grid md:grid-cols-3 gap-4">
          {plans.map((plan, idx) => (
            <div key={idx} className="border border-blue-300 rounded-xl p-4 shadow-sm bg-white">
              <h3 className="text-center font-semibold text-[16px] text-gray-800 mb-1">{plan.name}</h3>
              <p className="text-center text-red-600 font-semibold text-sm">{plan.price}</p>
              <p className="text-sm text-gray-700 mt-2 text-center">{plan.description}</p>
              <div className="mt-4 text-center">
                <button
                  className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-1 text-sm rounded-md"
                  onClick={() => handleSelectPlan(plan)}
                >
                  {plan.button}
                </button>
              </div>
            </div>
          ))}
        </div>

        {/* Render feature groups */}
        {featureGroups.map((group, index) =>
          renderFeatureGroup(group.title, group.items)
        )}

        {renderPaymentPopup()}
      </div>
    </>
  );
};

export default ServicePayment;
